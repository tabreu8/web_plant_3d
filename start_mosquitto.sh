#!/usr/bin/env bash
set -euo pipefail

# Simple launcher for a Mosquitto broker in Docker with MQTT (TCP) and WebSockets.
# Defaults can be overridden via env vars before running the script, e.g.:
#   MQTT_PORT=1884 WS_PORT=9002 CONTAINER_NAME=my-mqtt ./start_mosquitto.sh

CONTAINER_NAME=${CONTAINER_NAME:-mqtt-broker}
MQTT_PORT=${MQTT_PORT:-1883}
WS_PORT=${WS_PORT:-9001}
CONFIG_FILE=${CONFIG_FILE:-mosquitto.conf}
IMAGE=${IMAGE:-eclipse-mosquitto:2}

have() { command -v "$1" >/dev/null 2>&1; }

if ! have docker; then
  echo "Error: docker not found in PATH. Install Docker Desktop and retry." >&2
  exit 1
fi

# Create a minimal config if not present, wiring both MQTT and WebSockets listeners
if [ ! -f "$CONFIG_FILE" ]; then
  cat > "$CONFIG_FILE" <<EOF
# Auto-generated by start_mosquitto.sh
# MQTT TCP listener
listener ${MQTT_PORT}
protocol mqtt

# WebSockets listener
listener ${WS_PORT}
protocol websockets

# Development only â€” disable for production or use password_file/acl_file
allow_anonymous true
EOF
  echo "Created $CONFIG_FILE with MQTT ${MQTT_PORT} and WebSockets ${WS_PORT}."
fi

# Remove any existing container with the same name
if docker ps -a --format '{{.Names}}' | grep -q "^${CONTAINER_NAME}$"; then
  echo "Removing existing container ${CONTAINER_NAME} ..."
  docker rm -f "${CONTAINER_NAME}" >/dev/null
fi

# Run the container
set -x
docker run -d --name "${CONTAINER_NAME}" \
  -p "${MQTT_PORT}:${MQTT_PORT}" -p "${WS_PORT}:${WS_PORT}" \
  -v "${PWD}/${CONFIG_FILE}:/mosquitto/config/mosquitto.conf" \
  "${IMAGE}"
set +x

cat <<MSG

Mosquitto is starting in Docker (container: ${CONTAINER_NAME}).

Connect your simulator with:
  WebSockets URL: ws://localhost:${WS_PORT}
  (Optional) MQTT clients (TCP): mqtt://localhost:${MQTT_PORT}

View logs:
  docker logs -f ${CONTAINER_NAME}

Stop & remove:
  docker rm -f ${CONTAINER_NAME}
MSG
